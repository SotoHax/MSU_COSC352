hello-wasm/
├── src/
│   └── lib.rs          # Rust source code
├── www/
│   ├── index.html      # HTML form
│   └── index.js        # JavaScript glue
├── README.md
├── package.json
├── wasm-pack.toml
└── [pkg/]              # Generated by wasm-pack build

use wasm_bindgen::prelude::*;

#[wasm_bindgen]
pub fn generate_greeting(name: &str, age: u32, repeat: u32) -> String {
    let message = format!("Hello, {}. You are {} years old.\n", name, age);
    let mut result = String::with_capacity(message.len() * repeat as usize);
    for _ in 0..repeat {
        result.push_str(&message);
    }
    result
}
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>WASM Greeting</title>
</head>
<body>
  <h2>WASM Hello</h2>
  <input type="text" id="name" placeholder="Enter name" />
  <input type="number" id="age" placeholder="Enter age" />
  <input type="number" id="repeat" placeholder="Repeat count" />
  <button onclick="submitData()">Submit</button>
  <pre id="output"></pre>

  <script type="module" src="index.js"></script>
</body>
</html>
import init, { generate_greeting } from '../pkg/hello_wasm.js';

async function start() {
  await init();
  window.submitData = () => {
    const name = document.getElementById("name").value;
    const age = parseInt(document.getElementById("age").value);
    const repeat = parseInt(document.getElementById("repeat").value);
    const output = generate_greeting(name, age, repeat);
    document.getElementById("output").textContent = output;
  };
}

start();
cargo install wasm-pack

wasm-pack build --target web

cd www
python3 -m http.server 8000
